@*
    This is the example main content of the AdminLTE demo and represents a good smattering of AdminLTE functionality in a cshtml
    TODO: Delete this file when you're ready to start building your app
*@

@{
    ViewBag.Breadcrumb = new Breadcrumb(new Crumb[] {
        new Crumb("Dashboard", "", "fa-dashboard")
    });
}


<script>
(function(w,d,s,g,js,fs){
  g=w.gapi||(w.gapi={});g.analytics={q:[],ready:function(f){this.q.push(f);}};
  js=d.createElement(s);fs=d.getElementsByTagName(s)[0];
  js.src='https://apis.google.com/js/platform.js';
  fs.parentNode.insertBefore(js,fs);js.onload=function(){g.load('analytics');};
}(window,document,'script'));
</script>

<script>

gapi.analytics.ready(function() {

  /**
   * Authorize the user immediately if the user has already granted access.
   * If no access has been created, render an authorize button inside the
   * element with the ID "embed-api-auth-container".
   */
  gapi.analytics.auth.authorize({
    container: 'embed-api-auth-container',
    clientid: '613515265029-spkbodid2knrbh0c18930nt77db4aodp.apps.googleusercontent.com'
  });


    /**
     * Create a ViewSelector for the first view to be rendered inside of an
     * element with the id "view-selector-1-container".
     */
  var viewSelector1 = new gapi.analytics.ViewSelector({
      container: 'view-selector-1-container'
  });

    /**
     * Create a ViewSelector for the second view to be rendered inside of an
     * element with the id "view-selector-2-container".
     */
  var viewSelector2 = new gapi.analytics.ViewSelector({
      container: 'view-selector-2-container'
  });

    // Render both view selectors to the page.
  viewSelector1.execute();
  viewSelector2.execute();

    /**
 * Create the first DataChart for top countries over the past 30 days.
 * It will be rendered inside an element with the id "chart-1-container".
 */
  var timeline = new gapi.analytics.googleCharts.DataChart({
      query: {
          ids: 'ga:143138137',
          metrics: 'ga:sessions',
          dimensions: 'ga:country',
          'start-date': '30daysAgo',
          'end-date': 'yesterday'
      },
      chart: {
          type: 'GEO',
          container: 'timeline',
          options: {
              displayMode: 'auto'
          }
      }
  });

  /**
   * Create a new DataChart instance with the given query parameters
   * and Google chart options. It will be rendered inside an element
   * with the id "chart-container".
   */
  var dataChart2 = new gapi.analytics.googleCharts.DataChart({
    query: {
      metrics: 'ga:sessions',
      dimensions: 'ga:date',
      'start-date': '30daysAgo',
      'end-date': 'yesterday'
    },
    chart: {
      container: 'chart-2-container',
      type: 'LINE',
      options: {
        width: '100%'
      }
    }
  });


    /**
     * Update the first dataChart when the first view selecter is changed.
     */
  viewSelector1.on('change', function (ids) {
      timeline.set({ query: { ids: ids } }).execute();
  });

    /**
     * Update the second dataChart when the second view selecter is changed.
     */
  viewSelector2.on('change', function (ids) {
      dataChart2.set({ query: { ids: ids } }).execute();
  });

});
</script>

<div id="embed-api-auth-container"></div>
<br />
<p>Site View's</p>
<div id="chart-2-container"></div>
<div id="view-selector-2-container" hidden></div>
<br />
<p>Site View's by Country</p>
<div id="timeline"></div>
<div id="view-selector-1-container" hidden></div>